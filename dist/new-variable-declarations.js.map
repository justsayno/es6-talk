{"version":3,"sources":["webpack:///webpack/bootstrap c2f7ae8cbc4805b68746?da4a***","webpack:///./src/new-variable-declarations.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClCA,KAAI,YAAY,CAAhB;AACA,MAAK,IAAI,CAAT,EAAY,IAAI,CAAhB,EAAmB,GAAnB,EAAwB;AACpB,aAAQ,GAAR,CAAY,SAAZ;AACH;;AAED,KAAI,YAAY,CAAhB;AACA,MAAK,IAAI,CAAT,EAAY,IAAI,CAAhB,EAAmB,GAAnB,EAAwB;AACpB,iBAAY,CAAZ;AACA,aAAQ,GAAR,CAAY,QAAZ;AACH;;AAED,MAAK,IAAI,CAAT,EAAY,IAAI,CAAhB,EAAmB,GAAnB,EAAwB;AACpB,aAAQ,GAAR,CAAY,SAAZ;AACH;AACD,KAAI,YAAY,CAAhB;;;;;;AAMA,KAAM,YAAY,CAAlB","file":"new-variable-declarations.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c2f7ae8cbc4805b68746\n **/","/**\r\n * Block scoping and the let keyword\r\n */\r\n\r\nlet variable1 = 1;\r\nfor (i = 0; i < 2; i++) { \r\n    console.log(variable1)\r\n}\r\n\r\nlet variable2 = 1;\r\nfor (i = 0; i < 2; i++) { \r\n    variable2 = 2\r\n    console.log(variable)\r\n}\r\n\r\nfor (i = 0; i < 2; i++) { \r\n    console.log(variable3)\r\n}\r\nlet variable3 = 1;\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst CONSTANT1 = 1\r\n\r\n// the following is not allowed!\r\n// CONSTANT1 = 2\r\n// CONSTANT;\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/new-variable-declarations.js\n **/"],"sourceRoot":""}